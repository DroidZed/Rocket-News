plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.apollographql.apollo3' version "$apollo_runtime_version"
    id 'com.squareup.sqldelight'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    compileSdk = 32

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    implementation "androidx.core:core-ktx:$android_core_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_cor_version"

    // apollo
    implementation "com.apollographql.apollo3:apollo-runtime"
    implementation "com.apollographql.apollo3:apollo-normalized-cache-sqlite"
    implementation "com.apollographql.apollo3:apollo-http-cache"

    implementation "com.squareup.sqldelight:android-driver:$sqldelight_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coro_test_version"

    // For Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:$hilt_android_c_t_version")

    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:$hilt_android_c_t_version")
    // ...with Java.
    testAnnotationProcessor("com.google.dagger:hilt-android-compiler:$hilt_android_c_t_version")

    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hilt_android_c_t_version")
    // ...with Java.
    androidTestAnnotationProcessor("com.google.dagger:hilt-android-compiler:$hilt_android_c_t_version")

    androidTestImplementation "androidx.test.ext:junit:$andr_test_ext_junit_version"
}

apollo {
    packageName.set("tech.droidzed.apollowrapper")
    schemaFile = file("src/main/graphql/schema.graphqls")
    generateKotlinModels.set(true)
    generateOptionalOperationVariables.set(false)
}
