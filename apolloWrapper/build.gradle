plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id "com.apollographql.apollo3" version "$apollo_runtime_version"
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 24
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$android_core_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_cor_version"
    implementation "com.apollographql.apollo3:apollo-runtime:$apollo_runtime_version"
    implementation "com.apollographql.apollo3:apollo-normalized-cache-sqlite:$apollo_runtime_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coro_test_version"

    androidTestImplementation "androidx.test.ext:junit:$andr_test_ext_junit_version"
}

apollo {
    packageName.set("tech.droidzed.apollowrapper")
    schemaFile = file("src/main/graphql/schema.graphqls")
    generateKotlinModels.set(true)
    generateOptionalOperationVariables.set(false)
}
